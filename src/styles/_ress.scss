@charset "UTF-8";

$black: #000000;
$paleblue: #b3d4fc;
$yellow: #ffff00;

html {
  -webkit-box-sizing: border-box;
  -webkit-text-size-adjust: 100%;
  box-sizing: border-box;
  overflow-y: scroll;
}

*,
::before,
::after {
  -webkit-box-sizing: inherit;
  background-repeat: no-repeat;
  box-sizing: inherit;
}

::before,
::after {
  text-decoration: inherit;
  vertical-align: inherit;
}

* {
  margin: 0;
  padding: 0;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

hr {
  overflow: visible;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block;
}

summary {
  display: list-item;
}

small {
  font-size: 80%;
}

[hidden],
template {
  display: none;
}

abbr {
  border-bottom: 1px dotted;
  text-decoration: none;
}

a {
  -webkit-text-decoration-skip: objects;
  background-color: transparent;
}

a:active,
a:hover {
  outline-width: 0;
}

code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
}

b,
strong {
  font-weight: bolder;
}

dfn {
  font-style: italic;
}

mark {
  background-color: $yellow;
  color: $black;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

input {
  border-radius: 0;
}

button,
[type="button"],
[type="reset"],
[type="submit"],
[role="button"] {
  cursor: pointer;
}

[disabled] {
  cursor: default;
}

[type="number"] {
  width: auto;
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

textarea {
  overflow: auto;
  resize: vertical;
}

button,
input,
optgroup,
select,
textarea {
  font: inherit;
}

optgroup {
  font-weight: bold;
}

button {
  overflow: visible;
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: 0;
  padding: 0;
}

button:-moz-focusring,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  outline: 1px dotted ButtonText;
}

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

button,
select {
  text-transform: none;
}

button,
input,
select,
textarea {
  background-color: transparent;
  border-style: none;
  color: inherit;
}

// Style select like a standard input
select {
  -moz-appearance: none;
  // Firefox 36+
  -webkit-appearance: none;
  // Chrome 41+
}

select::-ms-expand {
  display: none;
}

select::-ms-value {
  color: currentColor;
}

legend {
  border: none;
  // Correct `color` not being inherited in IE 8/9/10/11
  color: inherit;
  // Correct the color inheritance from `fieldset` elements in IE
  display: table;
  // Correct the text wrapping in Edge and IE
  max-width: 100%;
  // Correct the text wrapping in Edge and IE
  white-space: normal;
  // Correct the text wrapping in Edge and IE
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  // Correct the inability to style clickable types in iOS and Safari
  font: inherit;
  // Change font properties to `inherit` in Chrome and Safari
}

[type="search"] {
  -webkit-appearance: textfield;
  // Correct the odd appearance in Chrome and Safari
  outline-offset: -2px;
  // Correct the outline style in Safari
}

// # Specify media element style
img {
  border-style: none;
  // Remove border when inside `a` element in IE 8/9/10
}

// Add the correct vertical alignment in Chrome, Firefox, and Opera
progress {
  vertical-align: baseline;
}

svg:not(:root) {
  overflow: hidden;
  // Internet Explorer 11-
}

audio,
canvas,
progress,
video {
  display: inline-block;
  // Internet Explorer 11+, Windows Phone 8.1+
}

@media screen {
  [hidden~="screen"] {
    display: inherit;
  }

  [hidden~="screen"]:not(:active):not(:focus):not(:target) {
    clip: rect(0 0 0 0);
    position: absolute;
  }
}

// Specify the progress cursor of updating elements
[aria-busy="true"] {
  cursor: progress;
}

// Specify the pointer cursor of trigger elements
[aria-controls] {
  cursor: pointer;
}

// Specify the unstyled cursor of disabled, not-editable, or otherwise inoperable elements
[aria-disabled] {
  cursor: default;
}

// Specify text selection background color and omit drop shadow
::-moz-selection {
  background-color: $paleblue;
  color: $black;
  text-shadow: none;
}

::selection {
  background-color: $paleblue;
  color: $black;
  text-shadow: none;
}
